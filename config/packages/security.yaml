security:
    role_hierarchy:
        ROLE_USER:        ROLE_USER
        ROLE_EDITOR:      ROLE_MEMBER
        ROLE_ADMIN:       ROLE_EDITOR
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        # in_memory: { memory: ~ }
        my_entity_provider:
            entity:
                class:              App\Entity\User
                property:           username
                # name of a non-default entity manager
                manager_name:       ~

    encoders:
        App\Entity\User:
            algorithm: bcrypt
            cost: 12
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern: ^/
            form_login:
                login_path: /login
                check_path: /login_check
                default_target_path: /profile
            logout:
                path:   app_logout
            anonymous: ~

          # main:
          #       anonymous:  ~  # ou true
          #       logout:
          #           path:   app_logout
          # login:
          #   pattern: .*
          #       # submit the login form here
          #       check_path: /login_check
          #       # the user is redirected here when they need to log in
          #       login_path: /login
          #       # if true, forward the user to the login form instead of redirecting
          #       use_forward: false


                # pattern: ^/
                #         form_login:
                #             provider:
                #          logout:       true
                #          anonymous:    true

                # guard:
                #     authenticators:
                #         - App\Security\LoginFormAuthenticator
                        # where to redirect after logout
                        # target: app_any_route
        #  access_control:
                        # require ROLE_ADMIN for /admin*
                        #- { path: ^/admin, roles: ROLE_ADMIN }
                        # matches /admin/users/*
                      #  - { path: ^/admin/users, roles: ROLE_SUPER_ADMIN }
                        # matches /admin/* except for anything matching the above rule
                      #  - { path: ^/admin, roles: ROLE_ADMIN }

                        #             remember_me:
                        #                 token_provider: name
                        #                 key: someS3cretKey
                        #                 name: NameOfTheCookie
                        #                 lifetime: 3600 # in seconds
                        #                 path: /foo
                        #                 domain: somedomain.foo
                        #                 secure: false
                        #                 httponly: true
                        #                 always_remember_me: false
                        #                 remember_me_parameter: _remember_me
                        #             logout:
                        #                 path:   /logout
                        #                 target: /
                        #                 invalidate_session: false
                        #                 delete_cookies:
                        #                     a: { path: null, domain: null }
                        #                     b: { path: null, domain: null }
                        #                 handlers: [some.service.id, another.service.id]
                        #                 success_handler: some.service.id
                        #             anonymous: ~

                        #  logout: ~
                        #  lougout_on_user_change: true
                        #  form_login:
                        #    csrf_token_generator: security.csrf.token_manager

                        # providers:
                        #     fos_userbundle:
                        #         id: fos_user.user_provider.username
                        #

                        #   access_control:
                        #     - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
                        #     - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
                        #     - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
                        #     - { path: ^/admin/, role: ROLE_ADMIN }
                        #FIN DU BLOC POUR FOSUserBundle

                        # activate different ways to authenticate

                        # http_basic: true
                        # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

                        # form_login: true
                        # https://symfony.com/doc/current/security/form_login_setup.html

                        # Easy way to control access for large sections of your site
                        # Note: Only the *first* access control that matches will be used
                        #  access_control:
                        # - { path: ^/admin, roles: ROLE_ADMIN }
                        # - { path: ^/profile, roles: ROLE_USER }
